CREATE TABLE IF NOT EXISTS "USERS" (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(256) NOT NULL,
	LOGIN CHARACTER VARYING(32) NOT NULL,
	NAME CHARACTER VARYING(256),
	BIRTHDAY DATE,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);


CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID BIGINT NOT NULL,
	FRIEND_USER_ID BIGINT NOT NULL,
	CONFIRMED BOOLEAN
);

CREATE TABLE IF NOT EXISTS MPA (
	MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(8),
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS GENRES (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(256),
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
	FILM_ID BIGINT NOT NULL,
	GENRE_ID INTEGER NOT NULL,
    PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE INDEX IF NOT EXISTS FILM_GENRES_FILM_FK_INDEX_4 ON FILM_GENRES (FILM_ID);
CREATE INDEX IF NOT EXISTS FILM_GENRES_GENRE_FK_INDEX_4 ON FILM_GENRES (GENRE_ID);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(256) NOT NULL,
	DESCRIPTION CHARACTER VARYING(2048),
	RELEASE_DATE DATE NOT NULL,
	DURATION BIGINT,
	MPA_ID INTEGER,
    DIRECTOR_ID INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID)
);

CREATE TABLE IF NOT EXISTS DIRECTORS (
    DIRECTOR_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(256)
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTORS (
    FILM_ID BIGINT REFERENCES FILMS(FILM_ID) NOT NULL,
    DIRECTOR_ID BIGINT REFERENCES DIRECTORS(DIRECTOR_ID) NOT NULL,
    PRIMARY KEY (DIRECTOR_ID,FILM_ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
    PRIMARY KEY (FILM_ID, USER_ID)
);
CREATE INDEX IF NOT EXISTS LIKES_FILM_FK_INDEX_4 ON LIKES (FILM_ID);
CREATE INDEX IF NOT EXISTS LIKES_USER_FK_INDEX_4 ON LIKES (USER_ID);

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE LIKES ADD CONSTRAINT IF NOT EXISTS LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_USER_FK FOREIGN KEY (USER_ID) REFERENCES "USERS"(USER_ID);

ALTER TABLE FRIENDS ADD CONSTRAINT IF NOT EXISTS FRIENDS_FRIEND_USER_FK FOREIGN KEY (FRIEND_USER_ID) REFERENCES "USERS"(USER_ID);

ALTER TABLE FILM_GENRES ADD CONSTRAINT IF NOT EXISTS FILM_GENRES_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE FILM_GENRES ADD CONSTRAINT IF NOT EXISTS FILM_GENRES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE FILMS ADD CONSTRAINT IF NOT EXISTS FILM_MPA_FK FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID);
